#include "Application.hpp"

Application::Application() : lug::Core::Application::Application{{"hello", {0, 1, 0}}} {
    getRenderWindowInfo().windowInitInfo.title = "Hello Cube";
}

bool Application::init(int argc, char* argv[]) {
    if (!lug::Core::Application::init(argc, argv)) {
        return false;
    }

    _scene = _graphics.createScene();
    _mesh = _graphics.createMesh("Cube");

    _mesh->vertices = {
        {{-1.0f,-1.0f,-1.0f}, {0.0f, 0.0f, 1.0f}, {0.0f, 0.0f}},
        {{-1.0f,-1.0f, 1.0f}, {0.0f, 0.0f, 1.0f}, {0.0f, 0.0f}},
        {{-1.0f, 1.0f, 1.0f}, {0.0f, 0.0f, 1.0f}, {0.0f, 0.0f}},
        {{-1.0f, 1.0f, 1.0f}, {0.0f, 0.0f, 1.0f}, {0.0f, 0.0f}},
        {{-1.0f, 1.0f,-1.0f}, {0.0f, 0.0f, 1.0f}, {0.0f, 0.0f}},
        {{-1.0f,-1.0f,-1.0f}, {0.0f, 0.0f, 1.0f}, {0.0f, 0.0f}},

        // Back
        {{-1.0f,-1.0f,-1.0f}, {1.0f, 0.0f, 1.0}, {0.0f, 0.0f}},
        {{1.0f, 1.0f,-1.0f}, {1.0f, 0.0f, 1.0}, {0.0f, 0.0f}},
        {{1.0f,-1.0f,-1.0f}, {1.0f, 0.0f, 1.0}, {0.0f, 0.0f}},
        {{-1.0f,-1.0f,-1.0f}, {1.0f, 0.0f, 1.0}, {0.0f, 0.0f}},
        {{-1.0f, 1.0f,-1.0f}, {1.0f, 0.0f, 1.0}, {0.0f, 0.0f}},
        {{1.0f, 1.0f,-1.0f}, {1.0f, 0.0f, 1.0}, {0.0f, 0.0f}},

        // Left
        {{-1.0f,-1.0f,-1.0f}, {1.0f, 0.0f, 0.0}, {0.0f, 0.0f}},
        {{1.0f,-1.0f,-1.0f}, {1.0f, 0.0f, 0.0}, {0.0f, 0.0f}},
        {{1.0f,-1.0f, 1.0f}, {1.0f, 0.0f, 0.0}, {0.0f, 0.0f}},
        {{-1.0f,-1.0f,-1.0f}, {1.0f, 0.0f, 0.0}, {0.0f, 0.0f}},
        {{1.0f,-1.0f, 1.0f}, {1.0f, 0.0f, 0.0}, {0.0f, 0.0f}},
        {{-1.0f,-1.0f, 1.0f}, {1.0f, 0.0f, 0.0}, {0.0f, 0.0f}},

        // Right
        {{-1.0f, 1.0f,-1.0f}, {1.0f, 1.0f, 0.0f}, {0.0f, 0.0f}},
        {{-1.0f, 1.0f, 1.0f}, {1.0f, 1.0f, 0.0f}, {0.0f, 0.0f}},
        {{1.0f, 1.0f, 1.0f}, {1.0f, 1.0f, 0.0f}, {0.0f, 0.0f}},
        {{-1.0f, 1.0f,-1.0f}, {1.0f, 1.0f, 0.0f}, {0.0f, 0.0f}},
        {{1.0f, 1.0f, 1.0f}, {1.0f, 1.0f, 0.0f}, {0.0f, 0.0f}},
        {{1.0f, 1.0f,-1.0f}, {1.0f, 1.0f, 0.0f}, {0.0f, 0.0f}},

        // Top
        {{1.0f, 1.0f,-1.0f}, {0.0f, 1.0f, 0.0f}, {0.0f, 0.0f}},
        {{1.0f, 1.0f, 1.0f}, {0.0f, 1.0f, 0.0f}, {0.0f, 0.0f}},
        {{1.0f,-1.0f, 1.0f}, {0.0f, 1.0f, 0.0f}, {0.0f, 0.0f}},
        {{1.0f,-1.0f, 1.0f}, {0.0f, 1.0f, 0.0f}, {0.0f, 0.0f}},
        {{1.0f,-1.0f,-1.0f}, {0.0f, 1.0f, 0.0f}, {0.0f, 0.0f}},
        {{1.0f, 1.0f,-1.0f}, {0.0f, 1.0f, 0.0f}, {0.0f, 0.0f}},

        // Bottom
        {{-1.0f, 1.0f, 1.0f}, {0.0f, 1.0f, 1.0}, {0.0f, 0.0f}},
        {{-1.0f,-1.0f, 1.0f}, {0.0f, 1.0f, 1.0}, {0.0f, 0.0f}},
        {{1.0f, 1.0f, 1.0f}, {0.0f, 1.0f, 1.0}, {0.0f, 0.0f}},
        {{-1.0f,-1.0f, 1.0f}, {0.0f, 1.0f, 1.0}, {0.0f, 0.0f}},
        {{1.0f,-1.0f, 1.0f}, {0.0f, 1.0f, 1.0}, {0.0f, 0.0f}},
        {{1.0f, 1.0f, 1.0f}, {0.0f, 1.0f, 1.0}, {0.0f, 0.0f}}
    };

    _mesh->indices = {
        // Front
        2, 1, 0,
        2, 3, 1,

        // Back
        4, 5, 6,
        6, 5, 7,

        // Left
        8, 9, 10,
        10, 9, 11,

        // Right
        13, 12, 14,
        13, 14, 15,

        // Top
        16, 19, 17,
        16, 18, 19,

        // Bottom
        20, 21, 23,
        20, 23, 22
    };

    return _mesh->load();
}

void Application::onEvent(const lug::Window::Event& event) {
    if (event.type == lug::Window::EventType::CLOSE) {
        close();
    }
}

void Application::onFrame() {
    // Do something on each frame
}
